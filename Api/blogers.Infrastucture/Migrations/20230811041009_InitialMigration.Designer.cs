// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blogers.Infrastucture.Persistence;

#nullable disable

namespace blogers.Infrastucture.Migrations
{
    [DbContext(typeof(FrontendContext))]
    [Migration("20230811041009_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("blogers.Domain.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Pass")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("pass");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__auth__3213E83F9BBE2922");

                    b.ToTable("auth", (string)null);
                });

            modelBuilder.Entity("blogers.Domain.Blogger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("picture_url");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("website");

                    b.HasKey("Id")
                        .HasName("PK__blogger__3213E83F14B0A831");

                    b.HasIndex(new[] { "Email" }, "UQ__blogger__AB6E6164C824D4EE")
                        .IsUnique();

                    b.ToTable("blogger", (string)null);
                });

            modelBuilder.Entity("blogers.Domain.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bloggerid")
                        .HasColumnType("int")
                        .HasColumnName("bloggerid");

                    b.Property<int?>("FriendId")
                        .HasColumnType("int")
                        .HasColumnName("friendID");

                    b.HasKey("Id")
                        .HasName("PK__friendsh__3213E83F70BD3C06");

                    b.HasIndex("Bloggerid");

                    b.HasIndex("FriendId");

                    b.ToTable("friendship", (string)null);
                });

            modelBuilder.Entity("blogers.Domain.Friendship", b =>
                {
                    b.HasOne("blogers.Domain.Blogger", "Blogger")
                        .WithMany("FriendshipBloggers")
                        .HasForeignKey("Bloggerid")
                        .HasConstraintName("FK__friendshi__blogg__3A81B327");

                    b.HasOne("blogers.Domain.Blogger", "Friend")
                        .WithMany("FriendshipFriends")
                        .HasForeignKey("FriendId")
                        .HasConstraintName("FK__friendshi__frien__3B75D760");

                    b.Navigation("Blogger");

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("blogers.Domain.Blogger", b =>
                {
                    b.Navigation("FriendshipBloggers");

                    b.Navigation("FriendshipFriends");
                });
#pragma warning restore 612, 618
        }
    }
}
